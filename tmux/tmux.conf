# use C-a, since it's on the home row and easier to hit than C-b
  set-option -g prefix C-a
  unbind-key C-a
  bind-key C-a send-prefix
  set -g base-index 1

# try to resolve issues with Neovim hanging: https://github.com/neovim/neovim/issues/2454
  set-option -sg escape-time 2

# Easy config reload
  bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."
# edit vimrc
  bind N new-window -n 'nimrc' 'nvim ~/.config/nvim/init.vim'
# edit zshrc
  bind Z new-window -n 'zshrc' 'nvim ~/.zshrc && source ~/.zshrc && tmux desplay ".zshrc updated"'

# vi is good
  setw -g mode-keys vi
  # set -g status-keys vi
  set-option -ga terminal-overrides ',xterm-256color-italic:Tc'
#
# set -sg escape-time 0
# mouse behavior
  # set-option -g -q mouse on
  # set -g mouse-select-pane on
  # set -g mouse-resize-pane on


  bind-key : command-prompt
  bind-key r refresh-client
  bind-key L clear-history
  bind-key Q set -g status

  bind-key space next-window
  bind-key bspace previous-window
  bind-key enter next-layout

# use vim-like keys for splits and windows
  bind-key v split-window -h -c "#{pane_current_path}"
  bind-key s split-window -v -c "#{pane_current_path}"
  bind-key h select-pane -L
  bind-key j select-pane -D
  bind-key k select-pane -U
  bind-key l select-pane -R
  bind-key P  display-message "clearing memory"\; run "sudo purge"

# smart pane switching with awareness of vim splits
  is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
  bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
  bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
  bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
  bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
  bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
  bind C-l send-keys 'C-l'
  bind-key C-o rotate-window
  bind-key + select-layout main-horizontal
  bind-key = select-layout main-vertical
  set-window-option -g other-pane-height 10
  set-window-option -g other-pane-width 90
  bind-key a last-pane
  bind-key q display-panes

  # window commands I can actually remember
  bind -n C-n new-window -c "#{pane_current_path}"
  bind -n C-w kill-pane
  bind -n C-q kill-window
  bind -n C-t next-window
  bind -n C-S-t previous-window
  bind-key [ copy-mode
  bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
  bind-key -Tcopy-mode-vi 'v' send -X begin-selection
  bind-key -Tcopy-mode-vi 'y' send -X copy-selection-and-cancel
# Update default binding of `Enter` to also use copy-pipe
  bind-key -Tcopy-mode-vi Enter send -X copy-selection-and-cancel

  set-window-option -g display-panes-time 1500

# Enable native Mac OS X copy/paste
# set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
  set-option -g repeat-time 0

# Fix annoying escape delay
  set -sg escape-time 0


#====== START THE STATUS BAR =============#
  set-option -g status-bg '#232526'
  set-option -g pane-active-border-fg '#232526'
  set-option -g pane-border-fg '#232526'

# Statuc setup
  set-option -g status on
  set-option -g status-fg default
  set -g status-justify left
  # set -g status-utf8 on
  set -g status-interval 1


  set -g @batt_discharging_icon "❇"

# Session info
# Left Segment
  set -g status-left-length 60
  set -g status-left "#{?client_prefix,#[fg=#ffffff bg=blue],#[fg=#5F5B66 bg=#ffffff]} #S #{?client_prefix,#[fg=blue bg=#232526],#[fg=#ffffff bg=#232526]} "

# Right Segment
  set -g status-right-length 180
  # set -g status-right " #{mail}  ⓛ   #(ifconfig | grep 'inet ' | tail -n 1 | cut -d ' ' -f 2)  \  %m/%d, %l:%M\  #{cpu_icon}#{cpu_percentage}  #{battery_icon} #{battery_percentage} "
  set -g status-right "%m/%d  %l:%M  "
  # set -g status-right ""
# Status Bar
# F8F8F2 guibg=#232526
  set -g window-status-format " #[fg=white bg=#232526] #I  #{?window_activity_flag,#[fg=#fac863 bg=#232526],#[fg=white bg=#232526]} #W "
  set-window-option -qg window-status-current-format " #[fg=#232526 bg=#A6E22E]#[fg=#232526 bg=#A6E22E] #I  #[fg=#232526 bg=#A6E22E bold] #W #[fg=#A6E22E bg=#232526]"

# Set window notifications
  set -g monitor-activity on
  set -g visual-activity off
  set-option -gw window-status-activity-attr bold

# List of plugins
  set -g monitor-activity on
# Supports `github_username/repo` or full git repo URLs
  set-environment -g TMUX_PLUGIN_MANAGER_PATH '$HOME/.tmux/tmux-plugins/'
  set -g @tpm_plugins '             \
  tmux-plugins/tpm                  \
  tmux-plugins/tmux-battery         \
  tmux-plugins/tmux-cpu             \
  tmux-plugins/tmux-resurrect       \
'
  # Other examples:
  # github_username/plugin_name    \
  # git@github.com/user/plugin     \
  # git@bitbucket.com/user/plugin  \

  # Initializes TMUX plugin manager.
  # Keep this line at the very bottom of tmux.conf.
run-shell $HOME/.tmux/tmux-plugins/tpm/tpm
